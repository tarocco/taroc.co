version: '3'

services:
    nginx:
        image: nginx:mainline-alpine
        volumes:
            # TODO: build the nginx configuration into the image
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
            - ./nginx/include:/etc/nginx/include:ro
            - ./html/taroc.co:/var/www/html/taroc.co:ro
            - ./html/staging.taroc.co:/var/www/html/staging.taroc.co:ro
            - ./html/bunass.pro:/var/www/html/bunass.pro:ro
            - ./html/staging.bunass.pro:/var/www/html/staging.bunass.pro:ro
            - ./html/media/:/var/www/html/media
            - ./log/nginx:/var/log/nginx
            - ./letsencrypt:/etc/letsencrypt:ro
        ports:
            - "443:443"
        restart: unless-stopped
    nginx-edge:
        image: nginx:mainline-alpine
        volumes:
            - ./html-edge:/var/www/html:ro
            - ./nginx-edge/nginx-edge.conf:/etc/nginx/nginx.conf:ro
            - ./log/nginx-edge:/var/log/nginx
        ports:
            - "80:80"
        restart: unless-stopped
    tarocco-client:
        image: tarocco-app-client:latest
        volumes:
            - ./html/taroc.co:/app/client/build-out
    #tarocco-server:
    #    image: tarocco-server:latest
    #    restart: unless-stopped

    tarocco-client-staging:
        image: tarocco-app-client:staging
        volumes:
            - ./html/staging.taroc.co:/app/client/build-out
    #tarocco-server-staging:
    #    image: tarocco-server:staging
    #    restart: unless-stopped
    
    bunass-pro-client:
        image: bunass-pro-app-client:latest
        volumes:
            - ./html/bunass.pro:/app/client/build-out

    # bunass-pro-client-staging:
    #     image: bunass-pro-app-client:staging
    #     volumes:
    #         - ./html/staging.bunass.pro:/app/client/build-out
    # db:
    #     image: postgres:9.6
    #     expose:
    #         - "5432"
    #     ports:
    #         - "5432:5432" # For debugging
    #     environment:
    #         - POSTGRES_DB=${POSTGRES_DB}
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     volumes:
    #         - ./db-data:/var/lib/postgresql/data
    #     restart: unless-stopped
    # jewel-bug-staging:
    #     image: jewelbug:staging
    #     ports:
    #         - "8000:8000"
    #     depends_on:
    #         - db
    #     environment:
    #         - DJANGO_SETTINGS_MODULE=jewelbug.settings.local
    #         - DJANGO_DEBUG=on
    #         - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    #         - POSTGRES_HOST=db
    #         - POSTGRES_DB=${POSTGRES_DB}
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     volumes:
    #         - ./media:/app/media
    #     restart: unless-stopped
